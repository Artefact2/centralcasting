#!/usr/bin/env php
<?php
/* Author: Romain Dal Maso <artefact2@gmail.com>
 *
 * This program is free software. It comes without any warranty, to the
 * extent permitted by applicable law. You can redistribute it and/or
 * modify it under the terms of the Do What The Fuck You Want To Public
 * License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details. */

namespace HeroesOfLegend;

require __DIR__.'/inc/root.php';

if($argc === 2 && in_array(strtolower($argv[1]), [ "--help", "-h", "-?", "/h" ], true)) {
	fprintf(STDERR, "Usage: %s [processes] [scripts...]\n", $argv[0]);
	die(1);
}

if($argc === 1) {
	fprintf(STDERR, "Auto-detecting number of CPUs... ");
	$cpus = shell_exec('getconf _NPROCESSORS_ONLN');
	if($cpus === null || !ctype_digit(trim($cpus))) {
		fprintf(STDERR, "failed, falling back to %d\n", $processes = 2);
	} else {
		fprintf(STDERR, "found %d\n", $processes = intval($cpus));
	}
} else {
	$processes = intval($argv[1]);
}

if($argc < 3) {
	foreach(glob(__DIR__.'/data/*.php') as $path) {
		$datas[] = pathinfo($path, PATHINFO_FILENAME);
	}
} else {
	array_shift($argv);
	array_shift($argv);
	$datas = $argv;
}

if($processes === 0) {
	/* Loop mode */
	array_pop($datas);	
	do {
		passthru(escapeshellcmd(__FILE__).' -1000 '.implode(' ', array_map('escapeshellarg', $datas)), $ret);
	} while($ret === 0);
} else if($processes < 0) {
	/* Work mode */
	gc_enable();
	while(++$processes) {
		foreach($datas as $d) {
			$c = Character::NPC("Fuzzman");
			$s = new State($c);
			$s->invoke($d);
		}
		fprintf(STDERR, ".");
		if($processes % 100 === 0) {
			trace('gc', 'collected %d cycles', gc_collect_cycles());
		}
	}
} else {
	/* Spawn mode */
	fprintf(STDERR, "Starting fuzz testing with %d processes. Hit ^C to cancel.\n", $processes);
	passthru('seq 1 '.$processes.' | xargs -P '.$processes.' -n 1 ./fuzz 0 '.implode(' ', array_map('escapeshellarg', $datas)));
}
