#!/usr/bin/env php
<?php
/* Author: Romain Dal Maso <artefact2@gmail.com>
 *
 * This program is free software. It comes without any warranty, to the
 * extent permitted by applicable law. You can redistribute it and/or
 * modify it under the terms of the Do What The Fuck You Want To Public
 * License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details. */

namespace HeroesOfLegend;

require __DIR__.'/../inc/root.php';

function get_full_name(string $name, string $path, string $contents) {
	preg_match('%/\*<<< Name: (.+) >>>\*/%U', $contents, $match);
	if(isset($match[1])) {
		return $match[1];
	}

	$c = Character::NPC("Mr Foo");
	$s = new State($c);
	$s->invoke($name);

	$ch = $s->getActiveCharacter()->getRootEntry()->getChildren();
	return $ch[0]->getSourceName();
}

$datas = [];

foreach(glob(__DIR__.'/../data/*.php') as $path) {
	$datas[pathinfo($path, PATHINFO_FILENAME)] = $path;
}

$names = [];
$links = [];

foreach($datas as $name => $path) {
	$source = file_get_contents($path);
	
	$names[$name] = ($fullname = get_full_name($name, $path, $source));
	if($fullname === null) {
		fprintf(STDERR, "NOTICE: data %s has no name\n", $name);
	}

	/* XXX replace this by properly iterating through tables, using ->executeAll() */
	preg_match_all(
		'%((->invoke|[^e]Invoker)\((?<mc>.+)\)|((->invokeTable|TableInvoker)\((?<sc>.+)(,|\))))%sU',
		$source, $matches
	);
	foreach(array_merge($matches['mc'], $matches['sc']) as $m) {
		preg_match_all('%(?<Q>"|\')(?<tablename>[1-9][0-9]*[A-Z]*|[1-9][0-9]*-[1-9][0-9]*)\k<Q>%sU', $m, $submatches);
		foreach($submatches['tablename'] as $sm) {
			$links[$name][$sm] = ($links[$name][$sm] ?? 0) + 1;
		}
	}
}

echo json_encode([
	'names' => $names,
	'links' => $links,
]);
